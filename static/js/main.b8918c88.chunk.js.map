{"version":3,"sources":["components/Canvas/index.tsx","components/ShapeSelect/index.tsx","models/Line.ts","models/Square.ts","models/Pencil.ts","models/SquareFilled.ts","models/index.ts","assets/icons/square.svg","assets/icons/diagonal-line.svg","assets/icons/square_filled.svg","assets/icons/pencil.svg","App.tsx","reportWebVitals.js","index.tsx"],"names":["Canvas","id","height","width","onStartDrawing","onMoveDrawing","onEndDrawing","canvasRef","useRef","isDrawingRef","handleMouseMove","useCallback","e","ctx","current","getContext","handleMouseUp","handleMouseDown","useEffect","removeListeners","addEventListener","className","ref","style","removeEventListener","ShapeSelect","selected","options","onSelect","map","option","title","label","value","onClick","alt","src","imageSrc","Line","config","x","y","this","event","offsetX","offsetY","beginPath","strokeStyle","color","lineWidth","moveTo","lineTo","stroke","closePath","Square","rect","Pencil","SquareFilled","fill","ShapeFactory","shape","pencil","line","square","squareFilled","App","mainRef","shapeInstance","useState","canvasSize","setCanvasSize","selectedShape","setSelectedShape","offsetWidth","offsetHeight","createShape","start","draw","end","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.b8918c88.chunk.js","sourcesContent":["import { useCallback, useEffect, useRef } from \"react\";\r\n\r\nimport \"./style.css\";\r\n\r\ninterface CanvasProps {\r\n  id: string;\r\n  width?: number | string;\r\n  height?: number | string;\r\n  onStartDrawing: (ctx: any, e: MouseEvent) => void;\r\n  onMoveDrawing: (ctx: any, e: MouseEvent) => void;\r\n  onEndDrawing: (ctx: any, e: MouseEvent) => void;\r\n}\r\n\r\nfunction Canvas({\r\n  id,\r\n  height,\r\n  width,\r\n  onStartDrawing,\r\n  onMoveDrawing,\r\n  onEndDrawing,\r\n}: CanvasProps) {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const isDrawingRef = useRef(false);\r\n\r\n  const handleMouseMove = useCallback(\r\n    (e: MouseEvent) => {\r\n      const ctx = canvasRef.current?.getContext(\"2d\");\r\n\r\n      if (isDrawingRef.current) {\r\n        onMoveDrawing(ctx, e);\r\n      }\r\n    },\r\n    [onMoveDrawing]\r\n  );\r\n\r\n  const handleMouseUp = useCallback(\r\n    (e: MouseEvent) => {\r\n      const ctx = canvasRef.current?.getContext(\"2d\");\r\n\r\n      onEndDrawing(ctx, e);\r\n      isDrawingRef.current = false;\r\n    },\r\n    [onEndDrawing]\r\n  );\r\n\r\n  const handleMouseDown = useCallback(\r\n    (e: MouseEvent) => {\r\n      const ctx = canvasRef.current?.getContext(\"2d\");\r\n\r\n      onStartDrawing(ctx, e);\r\n      isDrawingRef.current = true;\r\n    },\r\n    [onStartDrawing]\r\n  );\r\n\r\n  useEffect(() => {\r\n    removeListeners();\r\n\r\n    canvasRef.current?.addEventListener(\"mousedown\", handleMouseDown);\r\n    canvasRef.current?.addEventListener(\"mousemove\", handleMouseMove);\r\n    canvasRef.current?.addEventListener(\"mouseup\", handleMouseUp);\r\n\r\n    return () => {\r\n      removeListeners();\r\n    };\r\n  }, [handleMouseDown, handleMouseMove, handleMouseUp]);\r\n\r\n  return (\r\n    <canvas\r\n      className=\"canvas\"\r\n      ref={canvasRef}\r\n      id={id}\r\n      width={width}\r\n      height={height}\r\n      style={{\r\n        width,\r\n        height,\r\n      }}\r\n    ></canvas>\r\n  );\r\n\r\n  function removeListeners() {\r\n    canvasRef.current?.removeEventListener(\"mousedown\", handleMouseDown);\r\n    canvasRef.current?.removeEventListener(\"mousemove\", handleMouseMove);\r\n    canvasRef.current?.removeEventListener(\"mouseup\", handleMouseUp);\r\n  }\r\n}\r\n\r\nexport default Canvas;\r\n","import { ShapeOptions } from \"../../models\";\r\nimport \"./style.css\";\r\n\r\nexport type ShapeSelectOption = {\r\n  label: string;\r\n  value: ShapeOptions;\r\n  imageSrc: string;\r\n};\r\n\r\ninterface ShapeSelectProps {\r\n  selected?: string;\r\n  options?: ShapeSelectOption[];\r\n  onSelect?: (value: any) => void;\r\n}\r\n\r\nfunction ShapeSelect({ selected, options, onSelect }: ShapeSelectProps) {\r\n  return (\r\n    <ul className=\"shape-select-container\">\r\n      {options?.map((option) => (\r\n        <li\r\n          key={option.value}\r\n          title={option.label}\r\n          className={`shape-select-option${\r\n            option.value === selected ? \" selected\" : \"\"\r\n          }`}\r\n          onClick={() => {\r\n            if (onSelect) {\r\n              onSelect(option.value);\r\n            }\r\n          }}\r\n        >\r\n          <img className=\"option-icon\" alt=\"option\" src={option.imageSrc} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ShapeSelect;\r\n","import { Shape, ShapeConfig } from \"./Shape\";\r\n\r\nexport class Line implements Shape {\r\n  x = 0;\r\n  y = 0;\r\n  ctx: CanvasRenderingContext2D;\r\n  config: ShapeConfig;\r\n\r\n  constructor(ctx: CanvasRenderingContext2D, config: ShapeConfig) {\r\n    this.ctx = ctx;\r\n    this.config = config;\r\n  }\r\n\r\n  start(event: MouseEvent) {\r\n    this.x = event.offsetX;\r\n    this.y = event.offsetY;\r\n  }\r\n\r\n  draw(event: MouseEvent) {}\r\n\r\n  end(event: MouseEvent) {\r\n    this.ctx.beginPath();\r\n\r\n    this.ctx.strokeStyle = this.config.color || \"black\";\r\n    this.ctx.lineWidth = this.config.lineWidth || 1;\r\n\r\n    this.ctx.moveTo(this.x, this.y);\r\n    this.ctx.lineTo(event.offsetX, event.offsetY);\r\n    this.ctx.stroke();\r\n\r\n    this.ctx.closePath();\r\n  }\r\n}\r\n","import { Shape, ShapeConfig } from \"./Shape\";\r\n\r\nexport class Square implements Shape {\r\n  x = 0;\r\n  y = 0;\r\n  ctx: CanvasRenderingContext2D;\r\n  config: ShapeConfig;\r\n\r\n  constructor(ctx: CanvasRenderingContext2D, config: ShapeConfig) {\r\n    this.ctx = ctx;\r\n    this.config = config;\r\n  }\r\n\r\n  start(event: MouseEvent) {\r\n    this.x = event.offsetX;\r\n    this.y = event.offsetY;\r\n  }\r\n\r\n  draw(event: MouseEvent) {}\r\n\r\n  end(event: MouseEvent) {\r\n    this.ctx.beginPath();\r\n\r\n    this.ctx.strokeStyle = this.config.color || \"black\";\r\n    this.ctx.lineWidth = this.config.lineWidth || 1;\r\n\r\n    this.ctx.rect(\r\n      this.x,\r\n      this.y,\r\n      event.offsetX - this.x,\r\n      event.offsetY - this.y\r\n    );\r\n\r\n    this.ctx.closePath();\r\n    this.ctx.stroke();\r\n  }\r\n}\r\n","import { Shape, ShapeConfig } from \"./Shape\";\r\n\r\nexport class Pencil implements Shape {\r\n  x = 0;\r\n  y = 0;\r\n  ctx: CanvasRenderingContext2D;\r\n  config: ShapeConfig;\r\n\r\n  constructor(ctx: CanvasRenderingContext2D, config: ShapeConfig) {\r\n    this.ctx = ctx;\r\n    this.config = config;\r\n  }\r\n\r\n  start(event: MouseEvent) {\r\n    this.x = event.offsetX;\r\n    this.y = event.offsetY;\r\n  }\r\n\r\n  draw(event: MouseEvent) {\r\n    this.ctx.beginPath();\r\n    this.ctx.strokeStyle = this.config.color || \"black\";\r\n    this.ctx.lineWidth = this.config.lineWidth || 1;\r\n    this.ctx.moveTo(this.x, this.y);\r\n    this.ctx.lineTo(event.offsetX, event.offsetY);\r\n    this.ctx.stroke();\r\n    this.ctx.closePath();\r\n\r\n    this.x = event.offsetX;\r\n    this.y = event.offsetY;\r\n  }\r\n\r\n  end(event: MouseEvent) {\r\n    this.x = 0;\r\n    this.y = 0;\r\n  }\r\n}\r\n","import { Square } from \"./Square\";\r\n\r\nexport class SquareFilled extends Square {\r\n  end(event: MouseEvent) {\r\n    this.ctx.beginPath();\r\n\r\n    this.ctx.strokeStyle = this.config.color || \"black\";\r\n    this.ctx.lineWidth = this.config.lineWidth || 1;\r\n\r\n    this.ctx.rect(\r\n      this.x,\r\n      this.y,\r\n      event.offsetX - this.x,\r\n      event.offsetY - this.y\r\n    );\r\n\r\n    this.ctx.closePath();\r\n    this.ctx.fill();\r\n  }\r\n}\r\n","import { Shape, ShapeConfig } from \"./Shape\";\r\n\r\nimport { Line } from \"./Line\";\r\nimport { Square } from \"./Square\";\r\nimport { Pencil } from \"./Pencil\";\r\nimport { SquareFilled } from \"./SquareFilled\";\r\n\r\nexport type ShapeOptions = \"line\" | \"square\" | \"square_filled\" | \"pencil\";\r\n\r\nexport class ShapeFactory {\r\n  static createShape(\r\n    shape: ShapeOptions,\r\n    ctx: CanvasRenderingContext2D,\r\n    config: ShapeConfig\r\n  ): Shape {\r\n    switch (shape) {\r\n      case \"pencil\": {\r\n        return new Pencil(ctx, config);\r\n      }\r\n\r\n      case \"line\": {\r\n        return new Line(ctx, config);\r\n      }\r\n\r\n      case \"square\": {\r\n        return new Square(ctx, config);\r\n      }\r\n\r\n      case \"square_filled\": {\r\n        return new SquareFilled(ctx, config);\r\n      }\r\n\r\n      default:\r\n        return new Pencil(ctx, config);\r\n    }\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/square.6759a701.svg\";","export default __webpack_public_path__ + \"static/media/diagonal-line.9af8c884.svg\";","export default __webpack_public_path__ + \"static/media/square_filled.d725d725.svg\";","export default __webpack_public_path__ + \"static/media/pencil.ebb08039.svg\";","import { useEffect, useRef, useState } from \"react\";\r\n\r\nimport Canvas from \"./components/Canvas\";\r\nimport ShapeSelect, { ShapeSelectOption } from \"./components/ShapeSelect\";\r\n\r\nimport { Shape } from \"./models/Shape\";\r\nimport { ShapeFactory, ShapeOptions } from \"./models\";\r\n\r\nimport square from \"./assets/icons/square.svg\";\r\nimport line from \"./assets/icons/diagonal-line.svg\";\r\nimport squareFilled from \"./assets/icons/square_filled.svg\";\r\nimport pencil from \"./assets/icons/pencil.svg\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst options: ShapeSelectOption[] = [\r\n  {\r\n    label: \"Pencil\",\r\n    value: \"pencil\",\r\n    imageSrc: pencil,\r\n  },\r\n  {\r\n    label: \"Line\",\r\n    value: \"line\",\r\n    imageSrc: line,\r\n  },\r\n  {\r\n    label: \"Square\",\r\n    value: \"square\",\r\n    imageSrc: square,\r\n  },\r\n  {\r\n    label: \"Square filled\",\r\n    value: \"square_filled\",\r\n    imageSrc: squareFilled,\r\n  },\r\n];\r\n\r\nfunction App() {\r\n  const mainRef = useRef<HTMLDivElement>(null);\r\n  const shapeInstance = useRef<Shape | null>(null);\r\n  const [canvasSize, setCanvasSize] = useState<{\r\n    width: number;\r\n    height: number;\r\n  } | null>(null);\r\n  const [selectedShape, setSelectedShape] = useState<ShapeOptions>(\"pencil\");\r\n\r\n  useEffect(() => {\r\n    setCanvasSize({\r\n      width: mainRef.current?.offsetWidth || 100,\r\n      height: mainRef.current?.offsetHeight || 100,\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"drawing-canvas-container\">\r\n      <div className=\"main\" ref={mainRef}>\r\n        <Canvas\r\n          id=\"drawing-board\"\r\n          width={canvasSize?.width}\r\n          height={canvasSize?.height}\r\n          onStartDrawing={(ctx, e) => {\r\n            shapeInstance.current = ShapeFactory.createShape(\r\n              selectedShape,\r\n              ctx,\r\n              {\r\n                lineWidth: 1,\r\n              }\r\n            );\r\n\r\n            shapeInstance.current.start(e);\r\n          }}\r\n          onMoveDrawing={(ctx, e) => {\r\n            shapeInstance.current?.draw(e);\r\n          }}\r\n          onEndDrawing={(ctx, e) => {\r\n            shapeInstance.current?.end(e);\r\n\r\n            shapeInstance.current = null;\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"tools\">\r\n        <ShapeSelect\r\n          selected={selectedShape}\r\n          options={options}\r\n          onSelect={setSelectedShape}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals(console.log);\r\n"],"sourceRoot":""}